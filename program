import time # modul za vrijeme (timeout)
import hashlib # modul koji se koristi za uspoređivanje hasha između trenutnog i budućeg stanja web-stranice
from urllib.request import urlopen, Request
url = Request('https://www.autotrolej.hr/novosti-i-obavijesti/', headers={'User-Agent': 'Mozilla/5.0'}) # koristi se za GET zahtjev, u zagradu se upisuje URL za stranicu
response = urlopen(url).read() # zahtjev se pohranjuje u varijablu response
currentHash = hashlib.sha224(response).hexdigest() # dobiva se trenutni SHA-2 hash sa 224 bita za web-stranicu 
print("Pokrenuto...")
time.sleep(10) # .sleep funkcija služi za čekanje prije nego što se izvrši naredba, u ovom slučaju to iznosi 10 sekundi, to je iz razloga da se ne pinga previše stranica
while True: #beskonačna petlja
    try:
        response = urlopen(url).read() # događa se GET zahtjev i dobiva sadržaj stranice
        currentHash = hashlib.sha224(response).hexdigest() # dobiva se hash
        time.sleep(30) # čekanje od 30 sekundi, očekuje se da će se stranica u tom razdoblju promijeniti
        response = urlopen(url).read()
        newHash = hashlib.sha224(response).hexdigest() # opet se dobiva hash stranice koji se pohranjuje u drugu varijablu newhHash
        if newHash == currentHash: # ako su hashevi isti onda se izjavom continue vraća na početak programa i tako se ponavlja petlja
            print ("Trenutno nema promjene.")
            continue
        else: #inače dobivamo obavijest da se dogodila promjena
            print("Dogodila se promjena.")
            response = urlopen(url).read()
            currentHash = hashlib.sha224(response).hexdigest()
            time.sleep(30)
            continue
    except Exception as e: # u slučaju iznimaka tj. greški
        print("Greška u programu.")
